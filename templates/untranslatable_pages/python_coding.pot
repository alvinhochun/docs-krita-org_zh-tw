# SOME DESCRIPTIVE TITLE.
# Copyright (C) licensed under the GNU Free Documentation License 1.3+ unless stated otherwise
# This file is distributed under the same license as the Krita Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Krita Manual 5.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-19 22:30+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../untranslatable_pages/python_coding.rst:1
msgid "Guide to working with Python developer tools"
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:14
msgid "Python Developer Tools"
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:16
msgid "For working with Krita's Python code, there are a couple of tools for running unit tests and code checks."
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:19
msgid "Contents"
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:22
msgid "Setup"
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:24
msgid "To set up a Python environment for running code checks, unit tests etc, it is recommended to use a Python virtual environment for installing the needed Python packages. For this, install *virtualenwrapper* from your package manager or follow the `installation instructions <https://virtualenvwrapper.readthedocs.io/en/latest/install.html/>`_. It is also possible to install the needed Python packages directly into your system."
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:26
msgid "To create a virtual environment for Python 3 with *virtualenwrapper*, run:"
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:28
msgid "mkvirtualenv krita -p /usr/bin/python3"
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:32
msgid "This will create a virtual environment called *krita* and activate it. You will see that your command line now starts with `(krita)` to indicate the active virtual environment."
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:34
msgid "Now change into your Krita git repository install the needed dependencies into the environment:"
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:36
msgid "pip install --upgrade -r dev-tools/python/dev-requirements.txt"
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:40
msgid "You can rerun this command to update the packages should the version numbers in the requirement file get updated."
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:42
msgid "To get out of the virtual environment, type:"
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:44
msgid "deactivate"
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:48
msgid "And to get back into the virtual environment, type:"
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:50
msgid "workon krita"
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:56
msgid "Code Checks"
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:58
msgid "The code checker follows Python's official style guide, `PEP8 <https://www.python.org/dev/peps/pep-0008/>`_."
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:60
msgid "To run codechecks on all Python files, type:"
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:62
msgid "flake8 ."
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:66
msgid "Or limit to a specific directory or file:"
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:68
msgid "flake8 plugins/python/plugin_importer/"
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:74
msgid "Unit Tests"
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:76
msgid "To run all Python unit tests, type:"
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:78
msgid "pytest ."
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:82
msgid "Or limit to a specific directory, file, or test:"
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:84
msgid "pytest plugins/python/plugin_importer/tests/test_plugin_importer.py::PluginImporterTestCase::test_zipfile_doesnt_exist"
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:88
msgid "See `Pytest's Getting Started <https://docs.pytest.org/en/latest/getting-started.html>`_ documentation for more information about *pytest* in general."
msgstr ""

#: ../../untranslatable_pages/python_coding.rst:90
msgid "Unit tests for Python plugins should reside in a `tests` folder inside the plugin's folder. See the `plugin_importer` plugin for example unit tests. Note that in order to be able to import Krita's Python plugins outside of Krita in the unit test setup, there is a mock `krita` module that will return mock objects for any attribute names so that importing `krita` and registering plugins etc. become no-ops. Thus, it's only possible to test code units that are independent of Krita-related functions. Another caveat is that the mock krita module doesn't work with wildcard imports (`from krita import *`), but those should be avoided anyway."
msgstr ""
