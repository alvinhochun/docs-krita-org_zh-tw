# Copyright (C) licensed under the GNU Free Documentation License 1.3+
# unless stated otherwise
# This file is distributed under the same license as the Krita Manual
# package.
#
# Alvin Wong <alvin@alvinhc.com>, 2021.
# 楊景貴 <issacsopp@gmail.com>, 2021, 2022.
msgid ""
msgstr ""
"Project-Id-Version: Krita Manual 4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-27 21:21+0800\n"
"PO-Revision-Date: 2022-02-23 13:50+0000\n"
"Last-Translator: 楊景貴 <issacsopp@gmail.com>\n"
"Language-Team: Chinese (Traditional) <http://weblate.slat.org/projects/"
"krita-docs/4-tutorials___common_workflows/zh_Hant/>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.8.1\n"
"Generated-By: Babel 2.6.0\n"

#: ../../tutorials/common_workflows.rst:1
msgid "Common workflows used in Krita."
msgstr "Krita 中常見的工作流程。"

#: ../../tutorials/common_workflows.rst:15
msgid "Common Workflows"
msgstr "常用工作流程"

#: ../../tutorials/common_workflows.rst:17
msgid ""
"Krita's main goal is to help artists create a digital painting from scratch. "
"Krita is used by comic artists, matte painters, texture artists, and "
"illustrators around the world. This section explains some common workflow "
"that artists use in Krita. When you open a new document in Krita for the "
"first time, you can start painting instantly. The brush tool is selected by "
"default and you just have to paint on the canvas. However, let us look at "
"what artists do in Krita. Below are some of the common workflows used in "
"Krita:"
msgstr ""
"Krita 的主要目標是幫助藝術家從零開始創作數字繪畫。 Krita 被世界各地的漫畫藝術家、接景藝術家、紋理藝術家和插畫家使用。 本章節介紹藝術家在 "
"Krita 中使用的一些常見工作流程。 當您第一次在 Krita 中打開一個新文檔時，可以立即開始繪畫。 預設的情況下選擇畫筆工具，只需在畫布上繪畫。 "
"接下來，讓我們看看藝術家們在 Krita 中做了什麼。 以下是 Krita 中使用的一些常見工作流程："

#: ../../tutorials/common_workflows.rst:20
msgid "Speed Painting and Conceptualizing"
msgstr "速寫及概念繪製"

#: ../../tutorials/common_workflows.rst:22
msgid ""
"Some artists work only on the digital medium, sketching and visualizing "
"concepts in Krita from scratch. As the name suggests a technique of painting "
"done within a matter of hours to quickly visualize the basic scene, "
"character, look and feel of the environment or to denote the general mood "
"and overall concept is called a **speed painting**. Finishing and finer "
"details are not the main goals of this type of painting, but the "
"representation of form value and layout is the main goal."
msgstr ""
"一些藝術家只在數位媒體上工作，從頭開始在 Krita 中繪製和視覺概念。 "
"顧名思義，一種在幾個小時內完成的繪畫技術，可以快速視覺化場景的基本環境、角色、外觀和感覺，或者表示氛圍情緒和整體概念，稱為 **快速繪畫**。 "
"完搞或更精細的細節不是這類繪畫的主要目標，但形式價值和構圖佈局的表現是主要目標。"

#: ../../tutorials/common_workflows.rst:24
msgid ""
"Some artists set a time limit to complete the painting while some paint "
"casually. Speed painting then can be taken forward by adding finer details "
"and polish to create a final piece. Generally, artists first block in the "
"composition by adding patches and blobs of flat colors, defining the "
"silhouette, etc. Krita has some efficient brushes for this situation, for "
"example, the brushes under **Block Tag** like Block fuzzy, Block basic, "
"layout_block, etc."
msgstr ""
"也有些藝術家設定了完成繪畫的時間限制，另一些藝術家則隨意繪畫。 然後可以通過添加更精細的細節和潤色來更進一步完成速度繪畫作品。 "
"通常，藝術家會先利用添加平面顏色的塊面和斑點、定義輪廓等簡單手法在構圖中進行切塊。Krita 有一些針對這種情況的有效畫筆，例如，**我的最愛標籤**"
"下的 Marker Dry 等。"

#: ../../tutorials/common_workflows.rst:26
msgid ""
"After the composition and a basic layout has been laid out the artists add "
"as many details as possible in the given limited time, this requires a "
"decent knowledge of forms, value perspective and proportions of the objects. "
"Below is an example of speed paint done by `David Revoy <https://www."
"davidrevoy.com/>`_ in an hours time."
msgstr ""
"在構圖和基本佈局配置好後，藝術家在有限的時間內盡可能的增添加細節，這需要對形式、想法視角和比例有相當的了解。 下面是 `David Revoy "
"<https://www.davidrevoy.com/>`_ 在一個小時內完成的速寫範例。"

#: ../../tutorials/common_workflows.rst:None
msgid "Speedpaint of Pepper & Carrot by deevad (David Revoy)."
msgstr "速寫 辣椒和紅蘿蔔 作者 deevad ( David Revoy )。"

#: ../../tutorials/common_workflows.rst:32
msgid ""
"Artwork by David Revoy, license : `CC-BY <https://creativecommons.org/"
"licenses/by/3.0/>`_"
msgstr ""
"藝術創作 作者 David Revoy， 授權 : `CC-BY <https://creativecommons.org/licenses/by/3."
"0/>`_"

#: ../../tutorials/common_workflows.rst:34
msgid ""
"You can view the recorded speed painting demo for the above image `on "
"Youtube <https://www.youtube.com/watch?v=93lMLEuxSLk>`_."
msgstr ""
"可以查看上圖錄製的速寫演示影片 `on Youtube <https://www.youtube.com/watch?v=93lMLEuxSLk>`_."

#: ../../tutorials/common_workflows.rst:37
msgid "Colorizing Line Art"
msgstr "著色時線稿"

#: ../../tutorials/common_workflows.rst:39
msgid ""
"Often an artist, for example a comic book colorist, will need to take a "
"pencil sketch or other line art of some sort and use Krita to paint "
"underneath it. This can be either an image created digitally or something "
"that was done outside the computer and has been scanned."
msgstr ""
"通常，藝術家（例如漫畫家）需要使用鉛筆素描或其他線稿創作，然後使用 Krita 在其線稿下方進行繪製上色。 "
"這線稿可以是數位創作出來的圖像，也可以是在電腦外部繪製完成後經過掃描的線稿。"

#: ../../tutorials/common_workflows.rst:42
msgid "Preparing the line art"
msgstr "線稿準備"

#: ../../tutorials/common_workflows.rst:44
msgid ""
"If your images have a white or other single-tone background, you can use "
"either of the following methods to prepare the art for coloring:"
msgstr "如果圖像具有白色或其他單色的背景，就可以使用以下任一方法來為線稿進行著色："

#: ../../tutorials/common_workflows.rst:46
msgid ""
"Place the line art at the top of the layer stack and set its layer blending "
"mode to :guilabel:`Multiply`."
msgstr "請將線搞放在圖層的最頂部，並將其混合模式設定為 :guilabel:`色彩增值`。"

#: ../../tutorials/common_workflows.rst:48
msgid ""
"If you want to clean the line art a bit you can press the :kbd:`Ctrl + L` "
"shortcut or go to :menuselection:`Filters --> Adjust --> Levels`."
msgstr ""
"如果你想稍微清理一下藝術線條，你可以按 :kbd:`Ctrl + L` 快速鍵或是到 :menuselection:`濾鏡 --> 色彩調整 --> "
"色階`。"

#: ../../tutorials/common_workflows.rst:None
msgid "Level filter dialog."
msgstr "色階濾鏡對話框。"

#: ../../tutorials/common_workflows.rst:53
msgid ""
"You can clean the unwanted grays by moving the white triangle in the input "
"levels section to left and darken the black by moving the black triangle to "
"right."
msgstr "可以使用色階濾鏡中的白色三角形向左移動來清除不需要的灰色，或利用將黑色三角形向右移動來使深色變的更暗。"

#: ../../tutorials/common_workflows.rst:55
msgid ""
"If you draw in blue pencils and then ink your line art you may need to "
"remove the blue lines first to do that go to :menuselection:`Filters --> "
"Adjust --> Color adjustment curves` or press the :kbd:`Ctrl + M` shortcut."
msgstr ""
"如果線稿是用藍色鉛筆，那麼在線條上塗上墨水，可能需要先刪除藍色線條，然後轉到 :menuselection:`濾鏡 --> 色彩調整 --> "
"色彩調整曲線` 或是使用快速鍵 :kbd:`Ctrl + M` 。"

#: ../../tutorials/common_workflows.rst:None
msgid "Remove blue lines from image step 1."
msgstr "刪除圖像中的藍線步驟 1 。"

#: ../../tutorials/common_workflows.rst:60
msgid ""
"Now select **Red** from the drop-down, click on the top right node on the "
"graph and slide it all the way down. Or you can click on the top right node "
"and enter **0** in the input field. Repeat this step for **Green** too."
msgstr ""
"從下拉列表中選擇**Red**，單擊圖表右上角的節點並將其一直向下滑動。 或者您可以單擊右上角的節點並在輸入字段中輸入**0**。 對 **Green**"
" 也重複此步驟。"

#: ../../tutorials/common_workflows.rst:None
msgid "Removing blue lines from scan step 2."
msgstr "刪除圖像中的藍線步驟 2。"

#: ../../tutorials/common_workflows.rst:65
msgid ""
"Now the whole drawing will have a blue overlay, zoom in and check if the "
"blue pencil lines are still visible slightly. If you still see them, then go "
"to **Blue** Channel in the color adjustment and shift the top right node "
"towards left a bit, Or enter a value around 190 (one that removes the "
"remaining rough lines) in the input box."
msgstr ""
"現在整個圖面會有一個藍色的覆蓋，放大檢查藍色筆線是否仍然可見。 如果仍然看到，請轉到顏色調整中的**藍色**通道並將右上角的節點向左移動一點，"
"或者在輸入框中輸入一個大約 190 的值（刪除剩餘粗線的值）。"

#: ../../tutorials/common_workflows.rst:None
msgid "Remove blue lines from scans step 3."
msgstr "刪除圖像中的藍線步驟 3 。"

#: ../../tutorials/common_workflows.rst:70
msgid ""
"Now apply the color adjustment filter, yes we still have lots of blue on the "
"artwork. Be patient and move on to the next step. Go to :menuselection:"
"`Filters --> Adjust --> Desaturate` or press the :kbd:`Ctrl + Shift + U` "
"shortcut. Now select :guilabel:`Max` from the list."
msgstr ""
"接著套用色彩調整濾鏡，沒錯，我們的作品上還有很多藍色。 請耐心繼續下一步。 然後到 :menuselection:`濾鏡 --> 色彩調整 --> "
"HSV調整` 或按 :kbd:`Ctrl + Shift + U` 快捷鍵。 現在從列表中選擇:guilabel:`最大值`。"

#: ../../tutorials/common_workflows.rst:None
msgid "Remove blue lines from scans step 4."
msgstr "刪除圖像中的藍線步驟 4 。"

#: ../../tutorials/common_workflows.rst:75
msgid ""
"It is good to use non-photo-blue pencils to create the blue lines as those "
"are easy to remove. If you are drawing digitally in blue lines use #A4DDED "
"color as this is closer to non-photo-blue color."
msgstr ""
"最好使用非顯色藍( non-photo-blue )色來繪製藍色線條，因為它們很容易去除。 如果您以藍線進行數位繪圖，請使用#A4DDED "
"顏色，因為它更接近非顯色藍( non-photo-blue )。"

#: ../../tutorials/common_workflows.rst:77
msgid ""
"You can learn more about doing a sketch from blue sketch to digital painting "
"`here in a tutorial by David Revoy <https://www.davidrevoy.com/article239/"
"clean-blue-sketch-traditional-line-art-to-color-it-digital-with-in-krita>`_."
msgstr ""
"也可以在 David Revoy 的教學中了解更多關於從藍色素描到數字繪畫的素描 `這裡有 David Revoy 的教學 <https://www."
"davidrevoy.com/article239/clean-blue-sketch-traditional-line-art-to-color-it-"
"digital-with-in-krita>`_。"

#: ../../tutorials/common_workflows.rst:79
msgid ""
"After you have a clean black and white line art you may need to erase the "
"white color and keep only black line art, to achieve that go to :"
"menuselection:`Filters --> Colors --> Color to Alpha...` menu item. Use the "
"dialog box to turn all the white areas of the image transparent. The Color "
"Selector is set to White by default. If you have imported scanned art and "
"need to select another color for the paper color then you would do it here."
msgstr ""
"在有一個乾淨的黑白線稿後，可能需要擦除白色並只保留黑色線稿，要實現這一點，請到 :menuselection:`濾鏡 --> 色彩轉換 --> 色彩轉為 "
"Alpha...` 的選項。 使用對話框將圖像的所有白色區域變為透明。 顏色選擇器預設定為白色。 "
"如果您已導入掃描的作品並且需要為紙張顏色選擇另一種顏色，那麼也可以在這裡進行。"

#: ../../tutorials/common_workflows.rst:None
msgid "Color to alpha dialog box."
msgstr "色彩轉為 Alpha 對話視窗。"

#: ../../tutorials/common_workflows.rst:84
msgid ""
"This will convert the white color in your line art to alpha i.e. it will "
"make the white transparent leaving only the line art. Your line art can be "
"in grayscale color space, this is a unique feature in Krita which allows you "
"to keep a layer in a color-space independent from the image."
msgstr ""
"這會將線稿中的白色轉換為 alpha，意思是將使白色變透明，只留下線稿。 您的線稿可以在灰度色彩空間中，這是 Krita "
"的一個獨特功能，它可以將圖層保持在獨立於圖像的色彩空間中。"

#: ../../tutorials/common_workflows.rst:87
msgid "Laying in Flat Colors"
msgstr "填入平整顏色"

#: ../../tutorials/common_workflows.rst:89
msgid ""
"There are many ways to color a line art in Krita, but generally, these three "
"are common among the artists."
msgstr "在 Krita 中有很多方法可以將線稿填滿上色，但總結來說，這三種方式比較常見。"

#: ../../tutorials/common_workflows.rst:91
msgid "Paint blocks of color directly with block brushes."
msgstr "用塊刷直接繪製顏色塊。"

#: ../../tutorials/common_workflows.rst:92
msgid "Fill with Flood Fill Tool."
msgstr "使用填充工具填充。"

#: ../../tutorials/common_workflows.rst:93
msgid "Use a Colorize Mask."
msgstr "使用著色遮罩。"

#: ../../tutorials/common_workflows.rst:96
msgid "Blocking with brush"
msgstr "用筆刷遮擋"

#: ../../tutorials/common_workflows.rst:98
msgid ""
"The first is the more traditional method of taking a shape brush or using "
"the geometric tools to lay in color. This would be similar to using an "
"analog marker or brush on paper. There are various block brushes in Krita, "
"you can select **Block** Tag from the drop-down in the brush presets docker "
"and use the brushes listed there."
msgstr ""
"第一種是採用形狀筆刷或使用幾何工具上色的傳統的方法。 類似在紙上使用模擬記號筆刷。 Krita 中有多種方塊畫筆，"
"您可以從畫筆預設選擇器工作視窗的下拉菜單中選擇 **Block** Tag 並使用其中列出的畫筆(5.0無該標籤，可改用 Shapes fill 筆刷)。"

#: ../../tutorials/common_workflows.rst:100
msgid ""
"Add a layer underneath your line art layer and start painting with the "
"brush. If you want to correct any area you can press the :kbd:`E` key and "
"convert the same brush into an eraser. You can also use a layer each for "
"different colors for more flexibility."
msgstr ""
"在線稿圖層下方添加一個圖層並開始使用畫筆繪畫。 如果要更正任何區域，可以單點 E 鍵並將相同的畫筆轉換為橡皮擦。 "
"還可以為不同的顏色使用一個圖層，以獲得更大的靈活性。"

#: ../../tutorials/common_workflows.rst:103
msgid "Filling with Flood Fill tool"
msgstr "用填滿工具填滿"

#: ../../tutorials/common_workflows.rst:105
msgid ""
"The second method is to use the Flood fill tool to fill large parts of your "
"line art quickly. This method generally requires closed gaps in the line "
"art. To begin with this method place your line art on a separate layer. Then "
"activate the flood fill tool and set the :guilabel:`Grow selection` to 2px, "
"uncheck :guilabel:`Limit to current layer` if previously checked."
msgstr ""
"第二種方法是使用大量填充工具快速填滿大部分的區塊。 這種方法的條件是需要封閉的線稿圖。 首先，將線稿放在單獨的圖層上。 然後使用填充工具並將 "
":guilabel:`擴大選取區域` 設定為 2px，如果有選取區域，也請先取消選取 :guilabel:`取樣:目前圖層` if previously "
"checked."

#: ../../tutorials/common_workflows.rst:None
msgid "Flood fill in krita."
msgstr ""

#: ../../tutorials/common_workflows.rst:110
msgid ""
"Choose a color from color selector and just click on the area you want to "
"fill the color. As we have expanded the fill with grow selection the color "
"will be filled slightly underneath the line art thus giving us a clean fill."
msgstr ""

#: ../../tutorials/common_workflows.rst:114
msgid "Colorize Mask"
msgstr "著色遮罩"

#: ../../tutorials/common_workflows.rst:116
msgid ""
"The third method is to take advantage of the built-in :ref:`colorize_mask`. "
"This is a powerful tool that can dramatically improve your workflow and cut "
"you down on your production time. To begin coloring with the Colorize Mask, "
"select your line art layer and click the :guilabel:`Colorize Mask Editing "
"Tool` icon in the toolbar."
msgstr ""

#: ../../tutorials/common_workflows.rst:None
msgid "Colorize Mask Editing Tool in the toolbar."
msgstr ""

#: ../../tutorials/common_workflows.rst:122
msgid ""
"With the Colorize Mask Editing Tool enabled, click on the canvas—this will "
"add a Colorize Mask layer to your document and make your lineart look a "
"little blurry. You can now lay down solid brush strokes to indicate which "
"areas should be colored in what colors:"
msgstr ""

#: ../../tutorials/common_workflows.rst:None
msgid "Colorize Mask with brush strokes"
msgstr ""

#: ../../tutorials/common_workflows.rst:127
msgid ""
"Whenever you press the :guilabel:`Update` button in the Tool Options, you "
"will see which colors will fill which areas. You can continue to edit your "
"brush strokes until you are happy with the result. To get a clean look of "
"your painting, disable the \"Edit key strokes\" checkbox:"
msgstr ""

#: ../../tutorials/common_workflows.rst:None
msgid "Colorize Mask result"
msgstr ""

#: ../../tutorials/common_workflows.rst:132
msgid ""
"Once you are done, you can convert the Colorize Mask layer into a paint "
"layer in the Layers docker. Have a look at the :ref:`colorize_mask` manual "
"to learn more about this tool."
msgstr ""

#: ../../tutorials/common_workflows.rst:135
#: ../../tutorials/common_workflows.rst:None
msgid "Changing Line Art Color"
msgstr "改變線稿顏色"

#: ../../tutorials/common_workflows.rst:137
msgid ""
"To change the color of your line art, you can use the Alpha Lock feature. In "
"the layer docker, click on the rightmost icon of your line art layer. It's "
"the icon that looks like a little checker board:"
msgstr ""

#: ../../tutorials/common_workflows.rst:None
msgid "Alpha lock button"
msgstr ""

#: ../../tutorials/common_workflows.rst:143
msgid ""
"When Alpha Lock is enabled, you can only change the *color* of the pixels, "
"not their opacity—meaning that everything you paint will only change the "
"colors of your existing lines, not add new lines."
msgstr ""

#: ../../tutorials/common_workflows.rst:145
msgid ""
"If you want to change the color of your line art to one solid color, you can "
"now use the bucket fill tool and it will only apply to your existing lines. "
"Or if you want to apply several different colors to specific areas of your "
"line art, you can quickly paint over your line art with a broad brush:"
msgstr ""

#: ../../tutorials/common_workflows.rst:152
msgid "Painting"
msgstr "繪製"

#: ../../tutorials/common_workflows.rst:155
msgid "Starting from chaos"
msgstr "從混亂開始"

#: ../../tutorials/common_workflows.rst:157
msgid ""
"Here, you start by making a mess through random shapes and texture, then "
"taking inspirations from the resulting chaos you can form various concepts. "
"It is kind of like making things from clouds or finding recognizable shapes "
"of things in abstract and random textures. Many concept artists work with "
"this technique."
msgstr ""

#: ../../tutorials/common_workflows.rst:159
msgid ""
"You can use brushes like the shape brush, or the spray brush to paint a lot "
"of different shapes, and from the resulting noise, you let your brain pick "
"out shapes and compositions."
msgstr ""

#: ../../tutorials/common_workflows.rst:None
msgid "Starting a painting from chaotic sketch."
msgstr ""

#: ../../tutorials/common_workflows.rst:164
msgid ""
"You then refine these shapes to look more like shapes you think they look, "
"and paint them over with a normal paintbrush. This method is best done in a "
"painting environment."
msgstr ""

#: ../../tutorials/common_workflows.rst:167
msgid "Starting from a value based underground"
msgstr "從一個深色基底開始"

#: ../../tutorials/common_workflows.rst:169
msgid ""
"This method finds its origins in old oil-painting practice: You first make "
"an under-painting and then paint over it with color, having the dark "
"underground shine through."
msgstr ""

#: ../../tutorials/common_workflows.rst:171
msgid ""
"With Krita you can use blending modes for this purpose. Choosing the color "
"blending mode on a layer on top allows you to change the colors of the image "
"without changing the relative luminosity. This is useful, because humans are "
"much more sensitive to tonal differences than the difference in saturation "
"and hue. This'll allow you to work in grayscale before going into color for "
"the polishing phase."
msgstr ""

#: ../../tutorials/common_workflows.rst:173
msgid ""
"You can find more about this technique `here <https://www.davidrevoy.com/"
"article185/tutorial-getting-started-with-krita-1-3-bw-portrait>`_."
msgstr ""

#: ../../tutorials/common_workflows.rst:176
msgid "Preparing Tiles and Textures"
msgstr "準備貼花圖樣和紋理"

#: ../../tutorials/common_workflows.rst:178
msgid ""
"Many artists use Krita to create textures for 3d assets used for games "
"animation, etc. Krita has many texture templates for you to choose and get "
"started with creating textures. These templates have common sizes, bit depth "
"and color profiles that are used for texturing workflow."
msgstr ""

#: ../../tutorials/common_workflows.rst:180
msgid ""
"Krita also has a real-time seamless tile mode to help texture artist prepare "
"tiles and texture easily and check if it is seamless on the fly. The tiled "
"mode is called wrap-around mode, to activate this mode  got to :"
"menuselection:`View --> Wrap Around Mode`. Now when you paint the canvas is "
"tiled in real-time allowing you to create seamless pattern and texture, it "
"is also easy to prepare interlocking patterns and motifs in this mode."
msgstr ""

#: ../../tutorials/common_workflows.rst:183
msgid "Creating Pixel Art"
msgstr "創作像素藝術"

#: ../../tutorials/common_workflows.rst:185
msgid ""
"Krita can also be used to create a high definition pixel painting. The pixel "
"art look can be achieved by using Index color filter layer and overlaying "
"dithering patterns. The general layer stack arrangement is as shown below."
msgstr ""

#: ../../tutorials/common_workflows.rst:None
msgid "Layer stack setup for pixel art."
msgstr ""

#: ../../tutorials/common_workflows.rst:190
msgid ""
"The index color filter maps specific user-selected colors to the grayscale "
"value of the artwork. You can see the example below, the strip below the "
"black and white gradient has an index color applied to it so that the black "
"and white gradient gets the color selected to different values."
msgstr ""

#: ../../tutorials/common_workflows.rst:None
msgid "Color mapping in index color to grayscale."
msgstr ""

#: ../../tutorials/common_workflows.rst:195
msgid ""
"You can choose the required colors and ramps in the index color filter "
"dialog as shown below."
msgstr ""

#: ../../tutorials/common_workflows.rst:None
msgid "Index color filter dialog."
msgstr ""

#: ../../tutorials/common_workflows.rst:200
msgid ""
"Dithering can be used to enhance the look of the art and to ease the banding "
"occurred by the index color filter. Krita has a variety of dithering "
"patterns by default, these can be found in pattern docker. You can use these "
"patterns as fill layer, then set the blend mode to **overlay** and adjust "
"the opacity according to your liking. Generally, an opacity range of 10% - "
"25% is ideal."
msgstr ""

#: ../../tutorials/common_workflows.rst:202
msgid ""
"Paint the artwork in grayscale and add an index color filter layer at the "
"top then add the dithering pattern fill layer below the index color filter "
"but above the artwork layer, as shown in the layer stack arrangement above. "
"You can paint or adjust the artwork at any stage as we have added the index "
"color filter as a filter layer."
msgstr ""

#: ../../tutorials/common_workflows.rst:204
msgid ""
"You can add different groups for different colors and add different "
"dithering patterns for each group."
msgstr ""

#: ../../tutorials/common_workflows.rst:206
msgid "Below is an example painted with this layer arrangement."
msgstr ""

#: ../../tutorials/common_workflows.rst:None
msgid "Pixel art done in Krita."
msgstr ""
